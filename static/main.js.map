{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/records-list-page/records-list-page.component.css","webpack:///./src/app/records-list-page/records-list-page.component.html","webpack:///./src/app/records-list-page/records-list-page.component.ts","webpack:///./src/app/records.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,sD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACe;AACT;AACM;AAEN;AAC4C;AACxC;AACN;AA4B7C;IAAA;IAAyB,CAAC;IAAb,SAAS;QA1BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,uGAAwB;aACzB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAAC;oBACnB;wBACE,IAAI,EAAE,cAAc;wBACpB,SAAS,EAAE,uGAAwB;qBACpC,EAAE;wBACD,IAAI,EAAE,EAAE;wBACR,UAAU,EAAE,cAAc;wBAC1B,SAAS,EAAE,MAAM;qBAClB;iBACF,CAAC;gBACF,oEAAS,CAAC,OAAO,EAAE;gBACnB,0DAAW;aACZ;YACD,SAAS,EAAE;gBACT,+DAAc;aACf;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrCtB,mB;;;;;;;;;;;ACAA,qmCAAqmC,cAAc,uCAAuC,oBAAoB,4d;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5nC;AACiB;AAEV;AAOzD;IAaE,kCACU,cAA8B,EAC9B,KAAqB,EACrB,MAAc;QAFd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAfjB,SAAI,GAAG,CAAC,CAAC;QACT,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,EAAE,CAAC;QACd,UAAK,GAAa,EAAE,CAAC;QACrB,iBAAY,GAAG,EAAE,CAAC;QAClB,WAAM,GAAG,KAAK,CAAC;QACd,WAAM,GAAkB,EAAE,CAAC;IAU/B,CAAC;iCAjBM,wBAAwB;IASpB,qCAAY,GAA3B,UAA4B,KAAa;QACvC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC;IACjD,CAAC;IAQD,sBAAI,kDAAY;aAKhB;YACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;aAPD,UAAiB,IAAY;YAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC;;;OAAA;IAMO,2CAAQ,GAAhB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,aAClC,IAAI,EAAE,IAAI,CAAC,IAAI,IACZ,IAAI,CAAC,MAAM,EACd,CAAC,CAAC;IACN,CAAC;IAED,2CAAQ,GAAR;QAAA,iBAgBC;QAdC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAO,MAAM;;;;;wBACvC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;wBAErC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;wBAC9B,qBAAM,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;gCAClD,QAAQ,EAAE,MAAM,CAAC,QAAQ;gCACzB,MAAM,EAAE,0BAAwB,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;gCAC5D,OAAO,EAAE,0BAAwB,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC;6BAC/D,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;;wBAJjB,MAAM,GAAG,SAIQ;wBAEvB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;wBAC5B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC;wBAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;;;aACpB,CAAC,CAAC;IACL,CAAC;IACD,kDAAe,GAAf,UAAgB,KAAa;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,kDAAe,GAAf,UAAgB,OAAgB;QAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,iDAAc,GAAd,UAAe,MAAe;QAC5B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAC5B,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,6CAAU,GAAV,UAAW,MAAc;QACvB,MAAM,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IAED,4CAAS,GAAT,UAAU,MAAc;QACtB,MAAM,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IA3EU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAe0B,+DAAc;YACvB,8DAAc;YACb,sDAAM;OAhBb,wBAAwB,CA4EpC;IAAD,+BAAC;;CAAA;AA5EoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVM;AACO;AAGlD;IAAA;IAGA,CAAC;IAAD,oBAAC;AAAD,CAAC;;AAED;IAAA;IAIA,CAAC;IAAD,oBAAC;AAAD,CAAC;;AAGD;IAIE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAEpC,CAAC;IAEK,mCAAU,GAAhB,UAAiB,aAA4B,EAAE,KAAc,EAAE,IAAa;;;;;4BAC5D,qBAAM,IAAI,CAAC,eAAe,EAAE;;wBAApC,KAAK,GAAG,SAA4B;wBAEpC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,aAAG;4BAC/B,EAAE,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;gCAC3B,IAAM,MAAM,GAAG,aAAa,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;gCACpD,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oCACrG,MAAM,CAAC,KAAK,CAAC;gCACf,CAAC;4BACH,CAAC;4BACD,EAAE,CAAC,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;gCAClC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;oCAC5C,MAAM,CAAC,KAAK,CAAC;gCACf,CAAC;4BACH,CAAC;4BAED,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;gCACjC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;oCAC1C,MAAM,CAAC,KAAK,CAAC;gCACf,CAAC;4BACH,CAAC;4BAED,MAAM,CAAC,IAAI,CAAC;wBACd,CAAC,CAAC,CAAC;wBAEH,sBAAO;gCACL,KAAK,EAAE,QAAQ,CAAC,MAAM;gCACtB,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;6BAC5C,EAAC;;;;KACH;IAEa,wCAAe,GAA7B;;;;;;6BACM,CAAC,IAAI,CAAC,YAAY,EAAlB,wBAAkB;wBACpB,SAAI;wBAAgB,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,UAAU,CAAC,CAAC,SAAS,EAAE;;wBAAzE,GAAK,YAAY,GAAG,SAAqD,CAAC;;4BAE5E,sBAAO,IAAI,CAAC,YAAY,EAAC;;;;KAC1B;IACD,+BAAM,GAAN,UAAO,MAAc;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;IACpE,CAAC;IAED,mCAAU,GAAV,UAAW,MAAc;QACvB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IAED,sCAAa,GAAb,UAAc,MAAc;QAC1B,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IAzDU,cAAc;QAD1B,gEAAU,EAAE;yCAKe,+DAAU;OAJzB,cAAc,CA2D1B;IAAD,qBAAC;CAAA;AA3D0B;;;;;;;;;;;;;;AChB3B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { RecordsListPageComponent } from './records-list-page/records-list-page.component';\nimport { RecordsService } from './records.service';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecordsListPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {\n        path: 'records-list',\n        component: RecordsListPageComponent\n      }, {\n        path: '',\n        redirectTo: 'records-list',\n        pathMatch: 'full'\n      }\n    ]),\n    NgbModule.forRoot(),\n    FormsModule,\n  ],\n  providers: [\n    RecordsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"loaded\\\">\\n\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"nameFilter\\\">Contains</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nameFilter\\\" #filter (keyup.enter)=\\\"onFilterChanged(filter.value)\\\" />\\n    </div>\\n    <div class=\\\"form-check\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"current\\\" #current (change)=\\\"onCurrentChange(current.checked)\\\">\\n      <label class=\\\"form-check-label\\\" for=\\\"current\\\">Current</label>\\n    </div>\\n    <div class=\\\"form-check\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"readed\\\" #readed (change)=\\\"onReadedChange(readed.checked)\\\">\\n      <label class=\\\"form-check-label\\\" for=\\\"readed\\\">Readed</label>\\n    </div>\\n  </form>\\n\\n  <ngb-pagination \\n  [pageSize]=\\\"pageSize\\\"\\n  [(page)]=\\\"pageProperty\\\"\\n  [collectionSize]=\\\"itemsCount\\\"\\n  [maxSize]=\\\"10\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\"\\n  aria-label=\\\"Default pagination\\\"></ngb-pagination>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let item of items\\\">\\n      <div>\\n        {{ item.title }}\\n      </div>\\n      <div>\\n        {{ item.description }}\\n      </div>\\n      <div class=\\\"btn-group btn-group-toggle\\\">\\n        <label class=\\\"btn-primary\\\" ngbButtonLabel>\\n          <input type=\\\"checkbox\\\" ngbButton [(ngModel)]=\\\"item.readed\\\" (click)=\\\"setReaded(item)\\\"> Readed\\n        </label>\\n        <label class=\\\"btn-primary\\\" ngbButtonLabel>\\n          <input type=\\\"checkbox\\\" ngbButton [(ngModel)]=\\\"item.current\\\" (click)=\\\"setCurrent(item)\\\"> Current\\n        </label>\\n      </div>\\n    </li>\\n  </ul>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RecordsService, RecordsFilter } from '../records.service';\nimport { Record } from '../record';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-records-list-page',\n  templateUrl: './records-list-page.component.html',\n  styleUrls: ['./records-list-page.component.css']\n})\nexport class RecordsListPageComponent implements OnInit {\n  public page = 1;\n  public itemsCount = 0;\n  public pageSize = 10;\n  public items: Record[] = [];\n  public filterString = '';\n  public loaded = false;\n  private filter: RecordsFilter = {};\n\n  private static parseBoolean(value: string): boolean {\n    return value == null ? null : value === 'true';\n  }\n\n  constructor(\n    private recordsService: RecordsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  set pageProperty(page: number) {\n    this.page = page;\n    this.navigate();\n  }\n\n  get pageProperty() {\n    return this.page;\n  }\n\n  private navigate() {\n    this.router.navigate(['records-list', {\n      page: this.page,\n      ...this.filter,\n    }]);\n  }\n\n  ngOnInit() {\n\n    this.route.params.subscribe(async (params) => {\n      this.page = parseInt(params.page, 10) || 1;\n\n      const skip = (this.page - 1) * this.pageSize;\n      const result = await this.recordsService.getRecords({\n        contains: params.contains,\n        readed: RecordsListPageComponent.parseBoolean(params.readed),\n        current: RecordsListPageComponent.parseBoolean(params.current),\n      }, this.pageSize, skip);\n\n      this.items = result.records;\n      this.itemsCount = result.total;\n      this.loaded = true;\n    });\n  }\n  onFilterChanged(value: string) {\n    this.filter.contains = value;\n    this.navigate();\n  }\n\n  onCurrentChange(current: boolean) {\n    this.filter.current = current;\n    this.navigate();\n  }\n\n  onReadedChange(readed: boolean) {\n    this.filter.readed = readed;\n    this.navigate();\n  }\n\n  setCurrent(record: Record) {\n    record.current = !record.current;\n    this.recordsService.update(record);\n  }\n\n  setReaded(record: Record) {\n    record.readed = !record.readed;\n    this.recordsService.update(record);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Record } from './record';\n\nexport class RecordsResult {\n  records: Record[];\n  total: number;\n}\n\nexport class RecordsFilter {\n  contains?: string;\n  current?: boolean;\n  readed?: boolean;\n}\n\n@Injectable()\nexport class RecordsService {\n\n  private recordsCache: Record[];\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  async getRecords(recordsFilter: RecordsFilter, limit?: number, skip?: number): Promise<RecordsResult> {\n    const cache = await this.getRecordsCache();\n\n    const filtered = cache.filter(rec => {\n      if (recordsFilter.contains) {\n        const filter = recordsFilter.contains.toLowerCase();\n        if (rec.description.toLowerCase().indexOf(filter) < 0 && rec.title.toLowerCase().indexOf(filter) < 0) {\n          return false;\n        }\n      }\n      if (recordsFilter.current != null) {\n        if (!recordsFilter.current !== !rec.current) {\n          return false;\n        }\n      }\n\n      if (recordsFilter.readed != null) {\n        if (!recordsFilter.readed !== !rec.readed) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n\n    return {\n      total: filtered.length,\n      records: filtered.slice(skip, skip + limit)\n    };\n  }\n\n  private async getRecordsCache() {\n    if (!this.recordsCache) {\n      this.recordsCache = await this.http.get<Record[]>('/records').toPromise();\n    }\n    return this.recordsCache;\n  }\n  update(record: Record) {\n    return this.http.put('/records/' + record.id, record).toPromise();\n  }\n\n  markAsRead(record: Record) {\n    record.readed = true;\n    return this.update(record);\n  }\n\n  markAsCurrent(record: Record) {\n    record.current = true;\n    return this.update(record);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}